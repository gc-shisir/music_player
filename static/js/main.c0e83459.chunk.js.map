{"version":3,"sources":["components/Song.js","components/Player.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js","util.js"],"names":["Song","currentSong","className","src","cover","alt","name","artist","Player","isPlaying","setIsPlaying","audioRef","setSongInfo","songInfo","songs","setCurrentSong","setSongs","useEffect","newSongs","map","song","id","active","skipTrackHandler","direction","currentIndex","findIndex","length","playAudio","getTime","time","Math","floor","slice","currentTime","type","min","max","duration","onChange","e","current","target","value","onClick","icon","faAngleLeft","size","pause","play","faPause","faPlay","faAngleRight","LibrarySong","selectedSong","filter","state","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","uuidv4","color","audio","App","useRef","useState","data","timeUpdateHandler","ref","onTimeUpdate","onLoadedMetadata","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports","playPromise","undefined"],"mappings":"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","file":"static/js/main.c0e83459.chunk.js","sourcesContent":["import React from 'react';\n\nconst Song=({currentSong})=>{\n  return(\n    <div className=\"song-container\">\n      <img src={currentSong.cover} alt={currentSong.name} />\n      <h2>{currentSong.name}</h2>\n      <h3>{currentSong.artist}</h3>\n    </div>\n  )\n}\n\nexport default Song;","import React, { useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport playAudio from \"../util\";\n\nconst Player = ({\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  audioRef,\n  setSongInfo,\n  songInfo,\n  songs,\n  setCurrentSong,\n  setSongs,\n}) => {\n  // useEffect\n  useEffect(() => {\n    const newSongs = songs.map((song) => {\n      if (song.id === currentSong.id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n  }, [currentSong]);\n  // Event Handlers\n  const playSongHandler = () => {\n    // console.log(audioRef)\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  const skipTrackHandler = (direction) => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    if (direction === \"skip-forward\") {\n      setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n      playAudio(isPlaying, audioRef);\n    }\n    if (direction === \"skip-back\") {\n      if ((currentIndex - 1) % songs.length === -1) {\n        setCurrentSong(songs[songs.length - 1]);\n        playAudio(isPlaying, audioRef);\n        return;\n      }\n      setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n    }\n  };\n\n  const getTime = (time) => {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <input\n          type=\"range\"\n          min={0}\n          max={songInfo.duration || 0}\n          onChange={dragHandler}\n          value={songInfo.currentTime}\n          id=\"\"\n        />\n        <p>{getTime(songInfo.duration ? songInfo.duration : \"0:00\")}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          className=\"skip-back\"\n          onClick={() => skipTrackHandler(\"skip-back\")}\n          icon={faAngleLeft}\n          size=\"2x\"\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          icon={isPlaying ? faPause : faPlay}\n          size=\"2x\"\n          className=\"play\"\n        />\n        <FontAwesomeIcon\n          icon={faAngleRight}\n          size=\"2x\"\n          className=\"skip-forward\"\n          onClick={() => skipTrackHandler(\"skip-forward\")}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\nimport playAudio from '../util';\n\nconst LibrarySong = ({\n  song,\n  songs,\n  setCurrentSong,\n  id,\n  audioRef,\n  isPlaying,\n  setSongs,\n}) => {\n  const songSelectHandler = () => {\n    const selectedSong = songs.filter((state) => state.id === id);\n    // console.log(selectedSong);\n    setCurrentSong(selectedSong[0]);\n    // add active state to selected songs\n    const newSongs = songs.map((song) => {\n      if (song.id === id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n    // Check if song is playing\n    playAudio(isPlaying,audioRef);\n  };\n\n  return (\n    <div\n      onClick={songSelectHandler}\n      className={`library-song ${song.active ? \"selected\" : \"\"} `}\n    >\n      <img src={song.cover} alt={song.name} />\n      <div className=\"song-description\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n","import React from \"react\";\nimport LibrarySong from \"./LibrarySong\";\n\nconst Library = ({ songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus }) => {\n  return (\n    <div className={`library ${ libraryStatus ? 'active-library' : ''} `}>\n      <h2>Library</h2>\n      <div className=\"library-songs\">\n        {songs.map((song) => {\n          return (\n            <LibrarySong\n              song={song}\n              audioRef={audioRef}\n              isPlaying={isPlaying}\n              songs={songs}\n              setCurrentSong={setCurrentSong}\n              setSongs={setSongs}\n              id={song.id}\n              key={song.id}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Library;\n","import React from \"react\";\n\n// FontAwesome\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\n  return (\n    <nav>\n      <h1>Waves</h1>\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\n        Library\n        <FontAwesomeIcon icon={faMusic} />\n      </button>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import { v4 as uuidv4 } from \"uuid\";\nfunction chillHop() {\n  return [\n    {\n      name: \"Mirage\",\n      artist: \"Nymano, j'san\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/09fb436604242df99f84b9f359acb046e40d2e9e-1024x1024.jpg\",\n      id: uuidv4(),\n      active: true,\n      color: [\"#5B5382\", \"#F5AFAA\"],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10136\",\n    },\n    {\n      name: \"Frozen In Time\",\n      artist: \"Kendall Miles\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/10/0e5bb63f838ff92eeac142aae944e9f678df13c9-1024x1024.jpg\",\n      id: uuidv4(),\n      active: false,\n      color: [\"#1F487C\", \"#C7BED9\"],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10329\",\n    },\n    {\n      name: \"Mirage\",\n      artist: \"Nymano, j'san\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/09fb436604242df99f84b9f359acb046e40d2e9e-1024x1024.jpg\",\n      id: uuidv4(),\n      active: true,\n      color: [\"#5B5382\", \"#F5AFAA\"],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10136\",\n    },\n    {\n      name: \"Frozen In Time\",\n      artist: \"Kendall Miles\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/10/0e5bb63f838ff92eeac142aae944e9f678df13c9-1024x1024.jpg\",\n      id: uuidv4(),\n      active: false,\n      color: [\"#1F487C\", \"#C7BED9\"],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10329\",\n    },\n    {\n      name: \"Mirage\",\n      artist: \"Nymano, j'san\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/09fb436604242df99f84b9f359acb046e40d2e9e-1024x1024.jpg\",\n      id: uuidv4(),\n      active: true,\n      color: [\"#5B5382\", \"#F5AFAA\"],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10136\",\n    },\n    {\n      name: \"Frozen In Time\",\n      artist: \"Kendall Miles\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/10/0e5bb63f838ff92eeac142aae944e9f678df13c9-1024x1024.jpg\",\n      id: uuidv4(),\n      active: false,\n      color: [\"#1F487C\", \"#C7BED9\"],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10329\",\n    },\n    // {\n    //   name:\"\",\n    //   artist:\"\",\n    //   cover:\"\",\n    //   id:uuidv4(),\n    //   active:false,\n    //   color:['',''],\n    //   audio:''\n    // },\n  ];\n}\n\nexport default chillHop;\n","import React, { useState, useRef } from \"react\";\n\n// Import styles\nimport \"./styles/app.scss\";\n\n// Import components\nimport Song from \"./components/Song\";\nimport Player from \"./components/Player\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n\n// Import util\nimport data from \"./data\";\n\nfunction App() {\n  // Ref\n  const audioRef = useRef(null);\n\n  // State\n  const [songs, setSongs] = useState(data);\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  // Event handlers\n  const timeUpdateHandler = (e) => {\n    const currentTime = e.target.currentTime;\n    const duration = e.target.duration;\n    // console.log(duration\n    setSongInfo({\n      ...songInfo,\n      currentTime: currentTime,\n      duration: duration,\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        currentSong={currentSong}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        audioRef={audioRef}\n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        ref={audioRef}\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        src={currentSong.audio}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const playAudio = (isPlaying, audioRef) => {\n  if (isPlaying) {\n    const playPromise = audioRef.current.play();\n    // check if audio is loaded\n    if (playPromise !== undefined) {\n      playPromise.then((audio) => {\n        audioRef.current.play();\n      });\n    }\n  }\n};\nmodule.exports = playAudio;\n"],"sourceRoot":""}